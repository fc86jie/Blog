import{_ as n,M as l,p as o,q as c,R as e,t as r,N as s}from"./framework-96b046e1.js";const i={},a=e("nav",{class:"table-of-contents"},[e("ul",null,[e("li",null,[e("a",{href:"#vue-中动态引入图片为什么要是-require"},"vue 中动态引入图片为什么要是 require")])])],-1),u=e("h3",{id:"vue-中动态引入图片为什么要是-require",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue-中动态引入图片为什么要是-require","aria-hidden":"true"},"#"),r(" vue 中动态引入图片为什么要是 require")],-1),_=e("li",null,"public 下的资源：放在 public 文件夹的静态资源都会被简单的复制，而不经过 webpack，需要通过绝对路径来引用它们。因为虽然 public 文件不会被编译，但是 src 下的文件都会被编译。由于引入的是 public 下的资源，不会走 require，会直接返回代码中的定 义的文件地址，该地址无法在编译后的文件目录（dist 目录）下找到对应的文件，会导致引入资源失败",-1),d=e("li",null,"src 下的资源：src 目录下的资源会经过 webpack 编译，因为动态添加的 src，编译过后的文件地址和被编译过后的资源文件地址不 一致，从而无法正确引入资源。而使用 require，返回的就是资源文件被编译后的文件地址，从而可以正确的引入资源",-1),h=e("li",null,'当你在 JavaScript、CSS 或 *.vue 文件中使用相对路径 (必须以 . 开头) 引用一个静态资源时，该资源将会被包含进入 webpack 的依赖图中。在其编译过程中，所有诸如 <img src="...">、background: url(...) 和 CSS @import 的资源 URL 都会被解析为一 个模块依赖。',-1),p={href:"https://mp.weixin.qq.com/s/HM8lrZezW5WonPlk74zitQ",target:"_blank",rel:"noopener noreferrer"};function f(m,b){const t=l("ExternalLinkIcon");return o(),c("div",null,[a,u,e("ul",null,[_,d,h,e("li",null,[e("a",p,[r("参考链接"),s(t)])])])])}const k=n(i,[["render",f],["__file","other.html.vue"]]);export{k as default};
