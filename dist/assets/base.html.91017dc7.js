import{_ as n,o as s,c as a,d as e}from"./app.8aadd4fb.js";const t={},p=e(`<h3 id="electron-安装" tabindex="-1"><a class="header-anchor" href="#electron-安装" aria-hidden="true">#</a> Electron 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 设置淘宝源
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> <span class="token assign-left variable">ELECTRON_MIRROR</span><span class="token operator">=</span><span class="token string">&quot;https://npmmirror.com/mirrors/electron/&quot;</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> <span class="token assign-left variable">ELECTRON_CUSTOM_DIR</span><span class="token operator">=</span><span class="token string">&quot;{{ version }}&quot;</span>
// 安装
<span class="token function">npm</span> <span class="token function">install</span> electron --save-dev
// 测试是否安装成功
npx electron
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="windows-下控制台中文乱码问题" tabindex="-1"><a class="header-anchor" href="#windows-下控制台中文乱码问题" aria-hidden="true">#</a> windows 下控制台中文乱码问题</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// package.json中，运行之前增加 chcp <span class="token number">65001</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;start&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;chcp 65001 &amp;&amp; electron .&quot;</span>
  <span class="token punctuation">}</span>,
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打包" tabindex="-1"><a class="header-anchor" href="#打包" aria-hidden="true">#</a> 打包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 安装打包分发工具
<span class="token function">npm</span> <span class="token function">install</span> --save-dev @electron-forge/cli
// 初始化 electron-forge
npx electron-forge <span class="token function">import</span>
// 打包
<span class="token function">npm</span> run <span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在渲染进程中使用-nodejs" tabindex="-1"><a class="header-anchor" href="#在渲染进程中使用-nodejs" aria-hidden="true">#</a> 在渲染进程中使用 nodejs</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 需要设置下面2项才能直接在渲染进程中使用nodejs</span>
    <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在渲染进程中打开新窗口" tabindex="-1"><a class="header-anchor" href="#在渲染进程中打开新窗口" aria-hidden="true">#</a> 在渲染进程中打开新窗口</h3><ul><li>安装 @electron/remote</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> @electron/remote
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在主进程中初始化 remote 模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createWindow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
    <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 初始化</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote/main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote/main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>win<span class="token punctuation">.</span>webContents<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>渲染进程中获取 BrowserWindow</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> BrowserWindow <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),o=[p];function i(l,c){return s(),a("div",null,o)}const u=n(t,[["render",i],["__file","base.html.vue"]]);export{u as default};
